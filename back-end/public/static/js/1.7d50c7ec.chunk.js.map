{"version":3,"sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Map","props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","react_default","a","createElement","ref","className","concat","style","PlaceItem","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","_useState","useState","_useState2","Object","slicedToArray","showMap","setShowMap","_useState3","_useState4","showConfirmM","setShowConfirmM","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","process","id","Authorization","token","onDelete","t0","stop","apply","this","arguments","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","components_UIElements_Map","coordinates","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","places_components_PlaceItem","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","sent","places","fetchedPlaces","places_components_PlaceList","deletePlaceId","prevPlaces","filter"],"mappings":"2PA0BeA,SAvBH,SAACC,GACT,IAAMC,EAASC,mBACPC,EAAiBH,EAAjBG,OAAQC,EAASJ,EAATI,KAWhB,OATAC,oBAAU,WACN,IAAMC,EAAM,IAAIC,OAAOC,OAAOC,KAAKV,IAAIE,EAAOS,QAAS,CACnDP,OAAQH,EAAMG,OACdC,KAAMJ,EAAMI,OAGhB,IAAIG,OAAOC,OAAOC,KAAKE,OAAO,CAACC,SAAUZ,EAAMG,OAAQG,IAAKA,KAC7D,CAACH,EAAQC,IAGRS,EAAAC,EAAAC,cAAA,OACEC,IAAKf,EACLgB,UAAS,OAAAC,OAASlB,EAAMiB,WACxBE,MAAOnB,EAAMmB,gCC6ERC,EArFG,SAACpB,GAAU,IAAAqB,EAC4BC,cAA7CC,EADiBF,EACjBE,UAAWC,EADMH,EACNG,MAAOC,EADDJ,EACCI,YAAaC,EADdL,EACcK,WACjCC,EAAOC,qBAAWC,KAFCC,EAGQC,oBAAS,GAHjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGjBK,EAHiBH,EAAA,GAGRI,EAHQJ,EAAA,GAAAK,EAIeN,oBAAS,GAJxBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIlBE,EAJkBD,EAAA,GAIJE,EAJIF,EAAA,GAQnBG,EAAkB,kBAAML,GAAW,IAMnCM,EAAsB,WACxBF,GAAgB,IAGdG,EAAoB,eAAAC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAAhC,EAAAiC,KAAG,SAAAC,IAAA,OAAAF,EAAAhC,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACzBZ,GAAgB,GADSU,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGf3B,EAAY4B,0CAAA,UAAAnC,OAA8ClB,EAAMsD,IAAK,SAAU,KACrF,CACIC,cAAe,UAAY5B,EAAK6B,QALf,OAOrBxD,EAAMyD,SAASzD,EAAMsD,IAPAJ,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,iCAAAA,EAAAS,SAAAX,EAAA,iBAAH,yBAAAJ,EAAAgB,MAAAC,KAAAC,YAAA,GAW1B,OACIjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMiD,SAAP,KACIlD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAYxC,MAAOA,EAAOyC,QAASvC,IACvCb,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEC,KAAMhC,EACNiC,SAAU3B,EACV4B,OAAQrE,EAAMsE,QACdC,aAAa,4BACbC,YAAY,4BACZC,OAAQ5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQC,QAASlC,GAAjB,UAEN5B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAC6D,EAAD,CAAKzE,OAAQH,EAAM6E,YAAazE,KAAM,OAG9CS,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIC,KAAM5B,EACN6B,SAAU1B,EACV2B,OAAO,gBACPG,YAAY,4BACZC,OACK5D,EAAAC,EAAAC,cAACF,EAAAC,EAAMiD,SAAP,KACIlD,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQI,SAAO,EAACH,QAASjC,GAAzB,UACA7B,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQK,QAAM,EAACJ,QAAShC,GAAxB,YAIT9B,EAAAC,EAAAC,cAAA,gGAEJF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACVJ,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,UAAU,uBACbM,GAAaV,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAgBC,WAAS,IACzCrE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,OAAKoE,IAAG,GAAAjE,OAAKmC,sCAAL,KAAAnC,OAAwClB,EAAMoF,OAASC,IAAKrF,EAAMsF,SAE9EzE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,UAAKf,EAAMsF,OACXzE,EAAAC,EAAAC,cAAA,UAAKf,EAAMsE,SACXzD,EAAAC,EAAAC,cAAA,SAAIf,EAAMuF,cAEd1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQI,SAAO,EAACH,QAhEL,kBAAMvC,GAAW,KAgE5B,eACCT,EAAK6D,SAAWxF,EAAMyF,WACpB5E,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQgB,GAAE,WAAAxE,OAAalB,EAAMsD,KAA7B,QAEF3B,EAAK6D,SAAWxF,EAAMyF,WACpB5E,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQK,QAAM,EAACJ,QAjEG,WAC7BnC,GAAgB,KAgEL,eCtDJmD,SA3BG,SAAC3F,GACf,OAA2B,IAAvBA,EAAM4F,MAAMC,OACLhF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAClBJ,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACInE,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQgB,GAAG,eAAX,iBAKL7E,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAChBjB,EAAM4F,MAAMtF,IAAI,SAAAwF,GACd,OAAOjF,EAAAC,EAAAC,cAACgF,EAAD,CACJC,IAAKF,EAAMxC,GACXA,GAAIwC,EAAMxC,GACV8B,MAAOU,EAAMV,MACbE,MAAOQ,EAAMR,MACbC,YAAaO,EAAMP,YACnBjB,QAASwB,EAAMxB,QACfmB,UAAWK,EAAMG,QACjBpB,YAAaiB,EAAMI,SACnBzC,SAAUzD,EAAMmG,4BCefC,UAjCI,WAAM,IAAAtE,EACmBC,qBADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACduE,EADcrE,EAAA,GACAsE,EADAtE,EAAA,GAAAX,EAEiCC,cAA9CC,EAFaF,EAEbE,UAAWC,EAFEH,EAEFG,MAAOC,EAFLJ,EAEKI,YAAaC,EAFlBL,EAEkBK,WAEjC8D,EAASe,cAAYf,OAG3BnF,oBAAW,YACY,eAAAuC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAAhC,EAAAiC,KAAG,SAAAC,IAAA,IAAAwD,EAAA,OAAA1D,EAAAhC,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAES3B,EAAW,GAAAP,OAAImC,0CAAJ,iBAAAnC,OAAqDsE,IAFzE,OAEZgB,EAFYtD,EAAAuD,KAGlBH,EAAgBE,EAAaE,QAHXxD,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,iCAAAA,EAAAS,SAAAX,EAAA,iBAAH,yBAAAJ,EAAAgB,MAAAC,KAAAC,YAAA,EAQnB6C,IACD,CAAClF,EAAa+D,IAQjB,OACE3E,EAAAC,EAAAC,cAACF,EAAAC,EAAMiD,SAAP,KACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAYxC,MAAOA,EAAOyC,QAASvC,IAClCH,GAAaV,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAgBC,WAAS,KACvC3D,GAAa8E,GAAgBxF,EAAAC,EAAAC,cAAC6F,EAAD,CAAWhB,MAAOS,EAAcF,cAVtC,SAACU,GACxBP,EAAgB,SAAAQ,GAAU,OACtBA,EAAWC,OAAO,SAAAjB,GAAK,OAAIA,EAAMxC,KAAMuD","file":"static/js/1.7d50c7ec.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './Map.css';\r\n\r\nconst Map = (props) => {\r\n    const mapRef = useRef();\r\n    const { center, zoom } = props;\r\n\r\n    useEffect(() => {\r\n        const map = new window.google.maps.Map(mapRef.current, {\r\n            center: props.center,\r\n            zoom: props.zoom\r\n        });\r\n    \r\n        new window.google.maps.Marker({position: props.center, map: map})\r\n    }, [center, zoom]);\r\n    \r\n    return (  \r\n        <div \r\n          ref={mapRef} \r\n          className={`map ${props.className}`} \r\n          style={props.style}>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Map;","import React, { useState, useContext } from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button/Button\";\r\nimport './PlaceItem.css'\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\";\r\n\r\nconst PlaceItem = (props) => {\r\n    const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const auth = useContext(AuthContext)\r\n    const [ showMap, setShowMap ]  = useState(false);\r\n    const [showConfirmM, setShowConfirmM] = useState(false);\r\n    \r\n    const openMapHandler = () => setShowMap(true)\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmM(true)\r\n    } \r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmM(false)\r\n    }\r\n\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmM(false);\r\n        try {\r\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places${props.id}`,'DELETE', null,\r\n            {\r\n                Authorization: 'Bearer ' + auth.token \r\n            });\r\n            props.onDelete(props.id);\r\n        } catch (err) {}\r\n        \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n        <Modal \r\n          show={showMap}\r\n          onCancel={closeMapHandler}\r\n          header={props.address}\r\n          contentClass=\"place-item__modal-content\"\r\n          footerClass=\"place-item__modal-actions\"\r\n          footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n        >\r\n            <div className=\"map-container\">\r\n                <Map center={props.coordinates} zoom={15} />\r\n            </div>\r\n        </Modal>  \r\n        <Modal \r\n            show={showConfirmM}\r\n            onCancel={cancelDeleteHandler}\r\n            header=\"Are you sure?\"\r\n            footerClass=\"place-item__modal-actions\" \r\n            footer={\r\n                 <React.Fragment>\r\n                     <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\r\n                     <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\r\n                 </React.Fragment>\r\n            }\r\n        >\r\n            <p>Do you want to proceed and delete this place? Please note that it can't be undone </p>\r\n        </Modal>\r\n        <li className=\"place-item\">\r\n            <Card className=\"place-item__content\">\r\n              {isLoading && <LoadingSpinner asOverlay /> }\r\n            <div className=\"place-item__image\">\r\n                <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n            </div>\r\n            <div className=\"place-item__info\">\r\n                <h2>{props.title}</h2>\r\n                <h3>{props.address}</h3>\r\n                <p>{props.description}</p> \r\n            </div>\r\n            <div className=\"place-item__actions\">\r\n                <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\r\n                {auth.userId === props.creatorId && (\r\n                   <Button to={`/places/${props.id}`}>EDIT</Button> \r\n                )}\r\n                {auth.userId === props.creatorId && (\r\n                   <Button danger onClick={showDeleteWarningHandler}>DELETE</Button> \r\n                )}\r\n                \r\n            </div>\r\n            </Card>\r\n        </li>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default PlaceItem; ","import React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport './PlaceList.css';\r\nimport Button from \"../../shared/components/FormElements/Button/Button\";\r\n\r\nconst PlaceList = (props) => {\r\n    if (props.items.length === 0){\r\n        return <div className=\"place-list center\">\r\n            <Card>\r\n                <h2>No places found. Pls Create One</h2>\r\n                <Button to=\"/places/new\">Share Place</Button>\r\n            </Card>\r\n        </div>\r\n    }\r\n\r\n    return <ul className=\"place-list\">\r\n        {props.items.map(place => {\r\n           return <PlaceItem \r\n              key={place.id} \r\n              id={place.id} \r\n              image={place.image} \r\n              title={place.title} \r\n              description={place.description} \r\n              address={place.address} \r\n              creatorId={place.creator} \r\n              coordinates={place.location} \r\n              onDelete={props.onDeletePlace}\r\n            />\r\n        }) }\r\n    </ul>\r\n}\r\n \r\nexport default PlaceList;","import React, {useEffect, useState} from \"react\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hooks';\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst UserPlaces = () => {\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const userId = useParams().userId;\r\n    \r\n\r\n    useEffect( () => {\r\n        const fetchedPlaces = async () => {\r\n          try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\r\n            setLoadedPlaces(responseData.places)\r\n            \r\n          }  catch (err) {}\r\n            \r\n        }\r\n        fetchedPlaces();\r\n    }, [sendRequest, userId]);\r\n    \r\n    const placeDeleteHandler = (deletePlaceId) => {\r\n        setLoadedPlaces(prevPlaces =>  \r\n            prevPlaces.filter(place => place.id!== deletePlaceId)  \r\n        );\r\n    };\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay /> }\r\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />}\r\n      </React.Fragment>\r\n    )}\r\n \r\nexport default UserPlaces;"],"sourceRoot":""}