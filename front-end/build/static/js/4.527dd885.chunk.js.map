{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["__webpack_require__","d","__webpack_exports__","_objectSpread","_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","_step","isValid","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","test","err","e","f","inputReducer","state","action","C_Users_geral_Desktop_PROJECTS_mern_stack_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","isTouched","Input","props","_useReducer","useReducer","initialValue","initialValid","_useReducer2","C_Users_geral_Desktop_PROJECTS_mern_stack_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","C_Users_geral_Desktop_PROJECTS_mern_stack_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","C_Users_geral_Desktop_PROJECTS_mern_stack_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","sendRequest","error","clearError","_useState","useState","_useState2","C_Users_geral_Desktop_PROJECTS_mern_stack_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","loadedPlace","setLoadedPlace","placeId","useParams","navigate","useNavigate","_useForm","title","description","_useForm2","inputHandler","setFormData","_ref","C_Users_geral_Desktop_PROJECTS_mern_stack_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_geral_Desktop_PROJECTS_mern_stack_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","responseData","wrap","_context","prev","next","process","sent","place","t0","stop","apply","this","fetchPlace","placeUpdateSubmitHandler","_ref2","_callee2","_context2","preventDefault","JSON","stringify","Content-Type","Authorization","token","userId","_x","react__WEBPACK_IMPORTED_MODULE_3___default","_shared_components_UIElements_LoadingSpinner__WEBPACK_IMPORTED_MODULE_14__","Fragment","_shared_components_UIElements_ErrorModal__WEBPACK_IMPORTED_MODULE_10__","onClear","onSubmit","_shared_components_FormElements_Input__WEBPACK_IMPORTED_MODULE_5__","intialValid","_shared_components_FormElements_Button_Button__WEBPACK_IMPORTED_MODULE_6__","disabled","_shared_components_UIElements_Card_Card__WEBPACK_IMPORTED_MODULE_13__"],"mappings":"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","file":"static/js/4.527dd885.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, {useReducer, useEffect} from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\"\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH': {\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = (props) => {\r\n   const [inputState, dispatch] = useReducer(inputReducer, {\r\n       value: props.initialValue || \"\",\r\n       isTouched: false,\r\n       isValid: props.initialValid || false\r\n    });\r\n\r\n    const { id, onInput } = props;   \r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput( id, value, isValid)\r\n    }, [id, value, isValid, onInput]);   \r\n\r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE', \r\n            val: event.target.value,\r\n            validators: props.validators\r\n         })\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        });\r\n    }\r\n    const element = props.element === \"input\" ? (\r\n      <input \r\n         id={props.id} \r\n         type={props.type} \r\n         placeholder={props.placeholder}\r\n         onChange={changeHandler}\r\n         onBlur={touchHandler}\r\n         value={inputState.value}\r\n       />\r\n    ) : (\r\n        <textarea \r\n          id={props.id} \r\n          rows={props.rows || 3} \r\n          onChange={changeHandler}\r\n          onBlur={touchHandler}\r\n          value={inputState.value}\r\n        />\r\n    );\r\n\r\n    return ( \r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n          'form-control--invalid'}`}\r\n        >\r\n            <label htmlFor={props.id}> {props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Input;","import { useCallback, useReducer } from \"react\"; \r\n\r\n\r\nconst formReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if(state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                  formIsValid = formIsValid && action.isValid;  \r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId] : {value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid : formIsValid\r\n            };\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n//Custom hook always have to start with lowercase used\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    //Used useCallback to stop infinite loop on useEffect\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({ \r\n        type: 'INPUT_CHANGE',\r\n        value: value, \r\n        inputId: id, \r\n        isValid: isValid });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData]\r\n}\r\n \r\n","import React, {useEffect, useState, useContext} from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button/Button\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport \"./PlaceForm.css\";\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst UpdatePlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, sendRequest, error, clearError} = useHttpClient();\r\n    const [ loadedPlace, setLoadedPlace ] = useState(); \r\n    const placeId = useParams().placeId;\r\n    const navigate = useNavigate();\r\n\r\n    const [formState, inputHandler, setFormData ] = useForm({\r\n        title: {\r\n            value: \"\",\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: \"\",\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\r\n                setLoadedPlace(responseData.place);\r\n                setFormData({\r\n                    title: {\r\n                        value: responseData.place.title,\r\n                        isValid: true\r\n                    },\r\n                    description: {\r\n                        value: responseData.place.description,\r\n                        isValid: true\r\n                    }\r\n                });\r\n            } catch (err) {}\r\n            \r\n        };\r\n        fetchPlace();\r\n    }, [sendRequest, placeId, setFormData]);\r\n\r\n    const placeUpdateSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, 'PATCH', JSON.stringify({\r\n                title: formState.inputs.title.value,\r\n                description: formState.inputs.description.value\r\n            }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer' + auth.token\r\n                }\r\n            );\r\n            navigate('/' + auth.userId + '/places');\r\n        } catch (err) {}\r\n        \r\n    }\r\n \r\n    if(isLoading) {\r\n        return <div className=\"center\">\r\n                  <LoadingSpinner />\r\n                </div>\r\n    }\r\n\r\n    if(!loadedPlace && !error ) {\r\n        return <div className=\"center\">\r\n                <Card>\r\n                  <h2>Could not find place</h2>\r\n                </Card>\r\n                </div>\r\n    }\r\n\r\n   \r\n    return ( \r\n        <React.Fragment>  \r\n            <ErrorModal error={error} onClear={clearError} />            \r\n        {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n            <Input \r\n               id=\"title\"\r\n               element=\"input\"  \r\n               type=\"text\"\r\n               label=\"Title\"\r\n               validators={[VALIDATOR_REQUIRE()]}\r\n               errorText=\"PLease Enter a valid title.\"\r\n               onInput={inputHandler}\r\n               initialValue={loadedPlace.title}\r\n               intialValid={true}\r\n            />\r\n              <Input \r\n               id=\"description\"\r\n               element=\"textarea\"\r\n               label=\"Description\"  \r\n               validators={[VALIDATOR_MINLENGTH(5)]}\r\n               errorText=\"PLease Enter a valid description (min. 5 characters).\"\r\n               onInput={inputHandler}\r\n               initialValue={loadedPlace.description}\r\n               initialValid={true}\r\n            />\r\n            <Button type=\"submit\" disabled={!formState.isValid}>UPDATE PLACE</Button>\r\n        </form>\r\n        )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default UpdatePlace;"],"sourceRoot":""}